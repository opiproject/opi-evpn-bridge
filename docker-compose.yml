# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2022-2023 Dell Inc, or its subsidiaries.
---
version: '3.7'

services:
  spine1:
    image: quay.io/frrouting/frr:8.5.2
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_MODULE
      - CAP_NET_RAW
    stdin_open: true
    tty: true
    volumes:
      - ./conf/spine1.conf:/etc/frr/frr.conf
    networks:
      n1l1tos1:
        ipv4_address: 10.168.1.6
      n0l2tos1:
        ipv4_address: 10.168.2.6
      btos1:
        ipv4_address: 10.168.3.6
    command: |
      sh -x -c 'touch /etc/frr/vtysh.conf && \
            sed -i "s/bgpd=no/bgpd=yes/g" /etc/frr/daemons && \
            sed -i "s/127.0.0.1/0.0.0.0/g" /etc/frr/daemons && \
            ip link add name lo0 type dummy && \
            ifconfig lo0 10.0.0.1 netmask 255.255.255.255 up && \
            /etc/init.d/frr stop && \
            /usr/lib/frr/watchfrr -d -F traditional zebra bgpd staticd && \
            sleep infinity'

  leaf1:
    image: quay.io/frrouting/frr:8.5.2
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_MODULE
      - CAP_NET_RAW
    stdin_open: true
    tty: true
    volumes:
      - ./conf/leaf1.conf:/etc/frr/frr.conf
    networks:
      n1l1tos1:
        ipv4_address: 10.168.1.5
      n2htoleaf1:
      n6h1tol1y:
    command: |
      sh -x -c 'touch /etc/frr/vtysh.conf && \
            sed -i "s/bgpd=no/bgpd=yes/g" /etc/frr/daemons && \
            sed -i "s/127.0.0.1/0.0.0.0/g" /etc/frr/daemons && \
            ip link add name lo0 type dummy && \
            ifconfig lo0 10.0.0.2 netmask 255.255.255.255 up && \

            ip link add br-tenant type bridge vlan_default_pvid 0 vlan_filtering 1 vlan_protocol 802.1Q && \
            ip link set br-tenant up && \

            ip link add blue type vrf table 1000 && \
            ip link set blue up && \
            ip link add name lo1 type dummy && \
            ip link set lo1 master blue up && \
            ip address add 10.0.1.2/32 dev lo1 && \

            ip link add green type vrf table 1001 && \
            ip link set green up && \
            ip link add name lo2 type dummy && \
            ip link set lo2 master green up && \
            ip address add 10.0.2.2/32 dev lo2 && \

            ip link add yellow type vrf table 1002 && \
            ip link set yellow up && \
            ip link add name lo3 type dummy && \
            ip link set lo3 master yellow up && \
            ip address add 10.0.3.2/32 dev lo3 && \

            ip link add br100 addr aa:bb:cc:00:00:02 type bridge && \
            ip link set br100 master green up && \
            ip link add vni100 type vxlan local 10.0.0.2 dstport 4789 id 100 nolearning && \
            ip link set vni100 master br100 up && \

            ip link add br101 addr aa:bb:cc:00:00:03 type bridge && \
            ip link set br101 master yellow up && \
            ip link add vni101 type vxlan local 10.0.0.2 dstport 4789 id 101 nolearning && \
            ip link set vni101 master br101 up && \

            ip link add vni10 type vxlan id 10 local 10.0.0.2 dstport 4789 nolearning && \
            ip link set vni10 master br-tenant up && \
            bridge vlan add dev vni10 vid 10 pvid untagged && \
            bridge link set dev vni10 neigh_suppress on learning off && \

            ip link add vni20 type vxlan id 20 local 10.0.0.2 dstport 4789 nolearning && \
            ip link set vni20 master br-tenant up && \
            bridge vlan add dev vni20 vid 20 pvid untagged && \
            bridge link set dev vni20 neigh_suppress on learning off && \

            ip link add vni30 type vxlan id 30 local 10.0.0.2 dstport 4789 nolearning && \
            ip link set vni30 master br-tenant up && \
            bridge vlan add dev vni30 vid 30 pvid untagged && \
            bridge link set dev vni30 neigh_suppress on learning off && \

            ip link add vni40 type vxlan id 40 local 10.0.0.2 dstport 4789 nolearning && \
            ip link set vni40 master br-tenant up && \
            bridge vlan add dev vni40 vid 40 pvid untagged && \
            bridge link set dev vni40 neigh_suppress on learning off && \

            bridge vlan add dev br-tenant vid 20 self && \
            ip link add link br-tenant name vlan20 type vlan id 20 && \
            ip link set vlan20 address aa:bb:cc:00:00:21 && \
            ip link set vlan20 master blue up && \
            ip address add 20.20.20.1/24 dev vlan20 && \

            bridge vlan add dev br-tenant vid 30 self && \
            ip link add link br-tenant name vlan30 type vlan id 30 && \
            ip link set vlan30 address aa:bb:cc:00:00:31 && \
            ip link set vlan30 master blue up && \
            ip address add 30.30.30.1/24 dev vlan30 && \

            bridge vlan add dev br-tenant vid 40 self && \
            ip link add link br-tenant name vlan40 type vlan id 40 && \
            ip link set vlan40 address aa:bb:cc:00:00:41 && \
            ip link set vlan40 master green up && \
            ip address add 40.40.40.1/24 dev vlan40 && \

            bridge vlan add dev br-tenant vid 50 self && \
            ip link add link br-tenant name vlan50 type vlan id 50 && \
            ip link set vlan50 address aa:bb:cc:00:00:51 && \
            ip link set vlan50 master yellow up && \
            ip address add 50.50.50.1/24 dev vlan50 && \

            ip link set eth1 up && ip addr flush dev eth1 && \
            ip link set eth1 master br-tenant up && \
            bridge vlan add dev eth1 vid 10 && \

            bridge vlan add dev eth1 vid 20 && \

            bridge vlan add dev eth1 vid 40 && \

            ip addr flush dev eth2 && ip link set eth2 master br-tenant up && \
            bridge vlan add dev eth2 vid 50 && \

            /etc/init.d/frr stop && \
            /usr/lib/frr/watchfrr -d -F traditional zebra bgpd staticd && \
            sleep infinity'

  bleaf:
    image: quay.io/frrouting/frr:8.5.2
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_MODULE
      - CAP_NET_RAW
    stdin_open: true
    tty: true
    volumes:
      - ./conf/bleaf.conf:/etc/frr/frr.conf
    networks:
      btos1:
        ipv4_address: 10.168.3.5
      internet1:
        ipv4_address: 6.6.6.6
      internet2:
        ipv4_address: 7.7.7.7
    command: |
      sh -x -c 'touch /etc/frr/vtysh.conf && \
            sed -i "s/bgpd=no/bgpd=yes/g" /etc/frr/daemons && \
            sed -i "s/127.0.0.1/0.0.0.0/g" /etc/frr/daemons && \
            ip link add name lo0 type dummy && \
            ifconfig lo0 10.0.0.3 netmask 255.255.255.255 up && \

            ip link add green type vrf table 1001 && \
            ip link set green up && \
            ip link set eth1 master green && \

            ip link add yellow type vrf table 1002 && \
            ip link set yellow up && \
            ip link set eth2 master yellow && \

            ip link add br100 type bridge && \
            ip link set br100 master green addrgenmode none && \
            ip link set br100 addr aa:bb:cc:00:00:44 && \
            ip link add vni100 type vxlan local 10.0.0.3 dstport 4789 id 100 nolearning && \
            ip link set vni100 master br100 addrgenmode none && \
            ip link set vni100 type bridge_slave neigh_suppress on learning off && \
            ip link set vni100 up && \
            ip link set br100 up && \

            ip link add br101 type bridge && \
            ip link set br101 master yellow addrgenmode none && \
            ip link set br101 addr aa:bb:cc:00:00:55 && \
            ip link add vni101 type vxlan local 10.0.0.3 dstport 4789 id 101 nolearning && \
            ip link set vni101 master br101 addrgenmode none && \
            ip link set vni101 type bridge_slave neigh_suppress on learning off && \
            ip link set vni101 up && \
            ip link set br101 up && \

            /etc/init.d/frr stop && \
            /usr/lib/frr/watchfrr -d -F traditional zebra bgpd staticd && \
            sleep infinity'

  leaf2:
    image: quay.io/frrouting/frr:8.5.2
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_MODULE
      - CAP_NET_RAW
    stdin_open: true
    tty: true
    volumes:
      - ./conf/leaf2.conf:/etc/frr/frr.conf
    networks:
      n0l2tos1:
        ipv4_address: 10.168.2.5
      n2htoleaf2:
      n4htoleafbn2:
      n7htoleafbn2:
    command: |
      sh -x -c 'touch /etc/frr/vtysh.conf && \
            sed -i "s/bgpd=no/bgpd=yes/g" /etc/frr/daemons && \
            sed -i "s/127.0.0.1/0.0.0.0/g" /etc/frr/daemons && \
            ip link add name lo0 type dummy && \
            ifconfig lo0 10.0.0.4 netmask 255.255.255.255 up && \
            ip link add blue type vrf table 1000 && \
            ip link set blue up && \
            ip link add green type vrf table 1001 && \
            ip link set green up && \

            ip link add br10 type bridge && \
            ip link set br10 addr aa:bb:cc:00:00:22 && \
            ip link add link eth1 name eth1.10 type vlan id 10 && \
            ip link set eth1 up && ip addr flush dev eth1 && \
            ip link set eth1.10 up && \
            ip link set eth1.10 master br10 addrgenmode none && \
            ip link add vni10 type vxlan local 10.0.0.4 dstport 4789 id 10 nolearning && \
            ip link set vni10 master br10 addrgenmode none && \
            ip link set vni10 type bridge_slave neigh_suppress on learning off && \
            ip link set vni10 up && \
            ip link set br10 up && \

            ip link add br20 type bridge && \
            ip link set br20 master blue addrgenmode none && \
            ip link set br20 addr aa:bb:cc:00:00:23 && \
            ip addr add 20.20.20.1/24 dev br20 && \
            ip link add vni20 type vxlan local 10.0.0.4 dstport 4789 id 20 nolearning && \
            ip link set vni20 master br20 addrgenmode none && \
            ip link set vni20 type bridge_slave neigh_suppress on learning off && \
            ip link set vni20 up && \
            ip link set br20 up && \

            ip link add br30 type bridge && \
            ip link set br30 master blue addrgenmode none && \
            ip link set eth2 up && ip addr flush dev eth2 && \
            ip link add link eth2 name eth2.30 type vlan id 30 && \
            ip link set eth2.30 up && \
            ip link set eth2.30 master br30 addrgenmode none && \
            ip link set br30 addr aa:bb:cc:00:00:24 && \
            ip addr add 30.30.30.1/24 dev br30 && \
            ip link add vni30 type vxlan local 10.0.0.4 dstport 4789 id 30 nolearning && \
            ip link set vni30 master br30 addrgenmode none && \
            ip link set vni30 type bridge_slave neigh_suppress on learning off && \
            ip link set vni30 up && \
            ip link set br30 up && \

            ip link add br40 type bridge && \
            ip link set br40 master green addrgenmode none && \
            ip link set eth3 up && ip addr flush dev eth3 && \
            ip link add link eth3 name eth3.40 type vlan id 40 && \
            ip link set eth3.40 up && \
            ip link set eth3.40 master br40 addrgenmode none && \
            ip link set br40 addr aa:bb:cc:00:00:25 && \
            ip addr add 40.40.40.1/24 dev br40 && \
            ip link add vni40 type vxlan local 10.0.0.4 dstport 4789 id 40 nolearning && \
            ip link set vni40 master br40 addrgenmode none && \
            ip link set vni40 type bridge_slave neigh_suppress on learning off && \
            ip link set vni40 up && \
            ip link set br40 up && \

            /etc/init.d/frr stop && \
            /usr/lib/frr/watchfrr -d -F traditional zebra bgpd staticd && \
            sleep infinity'

  opi-evpn-bridge:
    build:
      context: .
    cap_add:
      - NET_ADMIN
    depends_on:
      - leaf1
    network_mode: service:leaf1
    command: /opi-evpn-bridge -port=50151
    healthcheck:
      test: grpcurl -plaintext localhost:50151 list || exit 1

  testgrpc:
    image: docker.io/namely/grpc-cli
    cap_add:
      - NET_ADMIN
    network_mode: service:leaf1
    depends_on:
      opi-evpn-bridge:
        condition: service_healthy
    entrypoint: /bin/bash
    command: |
      -x -c 'echo start && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.VrfService -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.VrfService.CreateVrf -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.VrfService.ListVrfs -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.VrfService.GetVrf -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.VrfService.DeleteVrf -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.VrfService.UpdateVrf -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.SviService -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.SviService.CreateSvi -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.SviService.ListSvis -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.SviService.GetSvi -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.SviService.DeleteSvi -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.SviService.UpdateSvi -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.LogicalBridgeService -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.LogicalBridgeService.CreateLogicalBridge -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.LogicalBridgeService.ListLogicalBridges -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.LogicalBridgeService.GetLogicalBridge -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.LogicalBridgeService.DeleteLogicalBridge -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.LogicalBridgeService.UpdateLogicalBridge -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.BridgePortService -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.BridgePortService.CreateBridgePort -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.BridgePortService.ListBridgePorts -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.BridgePortService.GetBridgePort -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.BridgePortService.DeleteBridgePort -l && \
      /entrypoint.sh ls localhost:50151 opi_api.network.evpn_gw.v1alpha1.BridgePortService.UpdateBridgePort -l && \
      echo toremove && \
      apt update && apt install iproute2 -y && \
      ip link add br-tenant type bridge vlan_default_pvid 0 vlan_filtering 1 vlan_protocol 802.1Q && \
      ip link set br-tenant up && \
      echo create && \
      /entrypoint.sh call --json_input --json_output localhost:50151 CreateVrf    "{\"vrf\" : {\"spec\" : {\"vni\" : 100, \"loopback_ip_prefix\": {}, \"vtep_ip_prefix\": {\"addr\": {\"af\": \"IP_AF_INET\", \"v4_addr\": 167772162}, \"len\": 24} }}, \"vrf_id\" : \"blue\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 CreateVrf    "{\"vrf\" : {\"spec\" : {\"vni\" : 101, \"loopback_ip_prefix\": {}, \"vtep_ip_prefix\": {\"addr\": {\"af\": \"IP_AF_INET\", \"v4_addr\": 167772162}, \"len\": 24} }}, \"vrf_id\" : \"green\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 CreateVrf    "{\"vrf\" : {\"spec\" : {\"vni\" : 102, \"loopback_ip_prefix\": {}, \"vtep_ip_prefix\": {\"addr\": {\"af\": \"IP_AF_INET\", \"v4_addr\": 167772162}, \"len\": 24} }}, \"vrf_id\" : \"yellow\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 CreateLogicalBridge    "{\"logical_bridge\" : {\"spec\" : {\"vni\" : 11, \"vlan_id\": 11 }}, \"logical_bridge_id\" : \"vxlan11\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 CreateLogicalBridge    "{\"logical_bridge\" : {\"spec\" : {\"vni\" : 22, \"vlan_id\": 22 }}, \"logical_bridge_id\" : \"vxlan22\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 CreateLogicalBridge    "{\"logical_bridge\" : {\"spec\" : {\"vni\" : 33, \"vlan_id\": 33 }}, \"logical_bridge_id\" : \"vxlan33\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 CreateBridgePort    "{\"bridge_port\" : {\"spec\" : {\"mac_address\" : \"qrvMAAAB\", \"ptype\": \"ACCESS\", \"logical_bridges\": [] }}, \"bridge_port_id\" : \"eth2\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 CreateBridgePort    "{\"bridge_port\" : {\"spec\" : {\"mac_address\" : \"qrvMAAAB\", \"ptype\": \"TRUNK\" , \"logical_bridges\": [] }}, \"bridge_port_id\" : \"eth3\" }" && \
      echo get && \
      /entrypoint.sh call --json_input --json_output localhost:50151 GetVrf       "{\"name\" : \"//network.opiproject.org/vrfs/blue\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 GetVrf       "{\"name\" : \"//network.opiproject.org/vrfs/green\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 GetVrf       "{\"name\" : \"//network.opiproject.org/vrfs/yellow\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 GetLogicalBridge       "{\"name\" : \"//network.opiproject.org/bridges/vxlan11\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 GetLogicalBridge       "{\"name\" : \"//network.opiproject.org/bridges/vxlan22\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 GetLogicalBridge       "{\"name\" : \"//network.opiproject.org/bridges/vxlan33\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 GetBridgePort          "{\"name\" : \"//network.opiproject.org/ports/eth2\" }" && \
      /entrypoint.sh call --json_input --json_output localhost:50151 GetBridgePort          "{\"name\" : \"//network.opiproject.org/ports/eth3\" }" && \
      echo toremove && \
      ip link add br10 type bridge && \
      ip link set br10 addr aa:bb:cc:00:00:11 && \
      ip link add link eth1 name eth1.10 type vlan id 10 && \
      ip link set eth1 up && ip addr flush dev eth1 && \
      ip link set eth1.10 up && \
      ip link set eth1.10 master br10 addrgenmode none && \
      ip link add vni10 type vxlan local 10.0.0.2 dstport 4789 id 10 nolearning && \
      ip link set vni10 master br10 addrgenmode none && \
      ip link set vni10 type bridge_slave neigh_suppress on learning off && \
      ip link set vni10 up && \
      ip link set br10 up && \
      ip link add br20 type bridge && \
      ip link set br20 master blue addrgenmode none && \
      ip link set br20 addr aa:bb:cc:00:00:21 && \
      ip link add link eth2 name eth2.20 type vlan id 20 && \
      ip link set eth2 up && ip addr flush dev eth2 && \
      ip link set eth2.20 up && \
      ip link set eth2.20 master br20 addrgenmode none && \
      ip addr add 20.20.20.1/24 dev br20 && \
      ip link add vni20 type vxlan local 10.0.0.2 dstport 4789 id 20 nolearning && \
      ip link set vni20 master br20 addrgenmode none && \
      ip link set vni20 type bridge_slave neigh_suppress on learning off && \
      ip link set vni20 up && \
      ip link set br20 up && \
      ip link add br30 type bridge && \
      ip link set br30 master blue addrgenmode none && \
      ip link set br30 addr aa:bb:cc:00:00:31 && \
      ip addr add 30.30.30.1/24 dev br30 && \
      ip link add vni30 type vxlan local 10.0.0.2 dstport 4789 id 30 nolearning && \
      ip link set vni30 master br30 addrgenmode none && \
      ip link set vni30 type bridge_slave neigh_suppress on learning off && \
      ip link set vni30 up && \
      ip link set br30 up && \
      ip link add br40 type bridge && \
      ip link set br40 master green addrgenmode none && \
      ip link set br40 addr aa:bb:cc:00:00:41 && \
      ip link add link eth3 name eth3.40 type vlan id 40 && \
      ip link set eth3 up && ip addr flush dev eth3 && \
      ip link set eth3.40 up && \
      ip link set eth3.40 master br40 addrgenmode none && \
      ip addr add 40.40.40.1/24 dev br40 && \
      ip link add vni40 type vxlan local 10.0.0.2 dstport 4789 id 40 nolearning && \
      ip link set vni40 master br40 addrgenmode none && \
      ip link set vni40 type bridge_slave neigh_suppress on learning off && \
      ip link set vni40 up && \
      ip link set br40 up && \
      ip link add br50 type bridge && \
      ip link set br50 master yellow addrgenmode none && \
      ip link set br50 addr aa:bb:cc:00:00:42 && ip addr flush dev eth4 && \
      ip link add link eth4 name eth4.50 type vlan id 50 && \
      ip link set eth4.50 up && \
      ip link set eth4.50 master br50 addrgenmode none && \
      ip addr add 50.50.50.1/24 dev br50 && \
      ip link add vni50 type vxlan local 10.0.0.2 dstport 4789 id 50 nolearning && \
      ip link set vni50 master br50 addrgenmode none && \
      ip link set vni50 type bridge_slave neigh_suppress on learning off && \
      ip link set vni50 up && \
      ip link set br50 up && \
      echo done'

  host2-leaf2:
    image: docker.io/library/alpine:3.18
    cap_add:
      - NET_ADMIN
    networks:
      n2htoleaf2:
    # L2 VXLAN - VLAN10 stretched with VNI10 to leaf2 from leaf1 (ping 10.10.10.3)
    command: |
      sh -x -c 'ip link add link eth0 name eth0.10 type vlan id 10 && \
                ip link set eth0 up && ip addr flush dev eth0 && \
                ip link set eth0.10 up && \
                ip addr add 10.10.10.11/24 dev eth0.10 && sleep infinity'

  host3-leaf2:
    image: docker.io/library/alpine:3.18
    cap_add:
      - NET_ADMIN
    networks:
      n4htoleafbn2:
    command: |
      sh -x -c 'ip link add link eth0 name eth0.30 type vlan id 30 && \
                ip link set eth0 up && ip addr flush dev eth0 && \
                ip link set eth0.30 up && \
                ip addr add 30.30.30.31/24 dev eth0.30 &&
                ip route replace default via 30.30.30.1 && sleep infinity'
  host4-leaf2:
    image: docker.io/library/alpine:3.18
    cap_add:
      - NET_ADMIN
    networks:
      n7htoleafbn2:
    command: |
      sh -x -c 'ip link add link eth0 name eth0.40 type vlan id 40 && \
                ip link set eth0 up && ip addr flush dev eth0 && \
                ip link set eth0.40 up && \
                ip addr add 40.40.40.41/24 dev eth0.40 &&
                ip route replace default via 40.40.40.1 && sleep infinity'

  opi-test:
    image: docker.io/library/alpine:3.18
    cap_add:
      - NET_ADMIN
    networks:
      n2htoleaf1:
      n6h1tol1y:
    depends_on:
      - spine1
      - leaf1
      - leaf2
      - bleaf
      - host2-leaf2
      - host3-leaf2
      - host4-leaf2
      - opi-evpn-bridge
      - testgrpc
    # HOST1
    # L2 VXLAN - VLAN10 stretched with VNI10 to leaf2 from leaf1, ping Host2 IP from Host1
    # L3VXLAN Asymmetric IRB:
    #   VLAN20 & VLAN30 stretched with VNI20 & VNI30 repectively to leaf2 from leaf1 via blue VRF, ping Host3 IP from Host1
    # L3VXLAN Symmetric IRB:
    #   Ping to Bleaf internet connectivity IPs from Host1 via green and yellow VRFs from Leaf1
    command: |
      sh -x -c 'ip link add link eth0 name eth0.10 type vlan id 10 && \
                ip link set eth0 up && ip addr flush dev eth0 && \
                ip link set eth0.10 up && \
                ip addr add 10.10.10.10/24 dev eth0.10 && \
                sleep 5 && \
                ping -c 3 10.10.10.11 && \
                ip link add link eth0 name eth0.20 type vlan id 20 && \
                ip link set eth0.20 up && \
                ip addr add 20.20.20.20/24 dev eth0.20 && \
                ip rule add from 20.20.20.20 lookup 1000
                ip route add default via 20.20.20.1 dev eth0.20 table 1000
                sleep 5 && \
                ping -c 3 30.30.30.31 -I 20.20.20.20 && \
                ip link add link eth0 name eth0.40 type vlan id 40 && \
                ip link set eth0.40 up && \
                ip addr add 40.40.40.40/24 dev eth0.40 && \
                ip rule add from 40.40.40.40 lookup 1001
                ip route add default via 40.40.40.1 dev eth0.40 table 1001
                sleep 5 && \
                ping -c 3 6.6.6.6 -I 40.40.40.40 && ping -c 3 40.40.40.41 && \
                ip link add link eth1 name eth1.50 type vlan id 50 && \
                ip link set eth1.50 up && \
                ip addr add 50.50.50.50/24 dev eth1.50 && \
                ip rule add from 50.50.50.50 lookup 1002
                ip route add default via 50.50.50.1 dev eth1.50 table 1002
                sleep 5 && \
                ping -c 3 7.7.7.7 -I 50.50.50.50'

networks:
  n1l1tos1:
    ipam:
      driver: default
      config:
        - subnet: 10.168.1.0/24

  n0l2tos1:
    ipam:
      driver: default
      config:
        - subnet: 10.168.2.0/24
  btos1:
    ipam:
      driver: default
      config:
        - subnet: 10.168.3.0/24

  internet:
    ipam:
      driver: default
      config:
        - subnet: 5.5.5.0/24

  internet1:
    ipam:
      driver: default
      config:
        - subnet: 6.6.6.0/24

  internet2:
    ipam:
      driver: default
      config:
        - subnet: 7.7.7.0/24

  n2htoleaf1:
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.16/28

  n2htoleaf2:
    ipam:
      driver: default
      config:
        - subnet: 10.10.10.32/28

  n3htoleafbn1:
    ipam:
      driver: default
      config:
        - subnet: 20.20.20.0/24

  n4htoleafbn2:
    ipam:
      driver: default
      config:
        - subnet: 30.30.30.0/24

  n5h1tol1r:
    ipam:
      driver: default
      config:
        - subnet: 40.40.40.16/28

  n6h1tol1y:
    ipam:
      driver: default
      config:
        - subnet: 50.50.50.0/24

  n7htoleafbn2:
    ipam:
      driver: default
      config:
        - subnet: 40.40.40.41/28
